"use strict";var CrossRoom=(()=>{var m=Object.defineProperty,C=Object.defineProperties,N=Object.getOwnPropertyDescriptor,y=Object.getOwnPropertyDescriptors,x=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols;var R=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var l=(o,e,r)=>e in o?m(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r,u=(o,e)=>{for(var r in e||(e={}))R.call(e,r)&&l(o,r,e[r]);if(b)for(var r of b(e))P.call(e,r)&&l(o,r,e[r]);return o},S=(o,e)=>C(o,y(e));var h=(o,e)=>{for(var r in e)m(o,r,{get:e[r],enumerable:!0})},f=(o,e,r,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of x(e))!R.call(o,t)&&t!==r&&m(o,t,{get:()=>e[t],enumerable:!(a=N(e,t))||a.enumerable});return o};var L=o=>f(m({},"__esModule",{value:!0}),o);var d=(o,e,r)=>(l(o,typeof e!="symbol"?e+"":e,r),r);var V={};h(V,{CrossRoom:()=>p,default:()=>k});var E={properties:{roomId:{type:"number"},strRoomId:{type:"string"}}},T={name:"option",required:!0,properties:S(u({},E.properties),{userId:{type:"string"}})},g={name:"option",required:!0,properties:{updateList:{type:"array",required:!0,arrayItem:{required:!0,type:"object",properties:S(u({},T.properties),{userId:{required:!1,type:"string"},muteAudio:{type:"boolean"},muteVideo:{type:"boolean"},muteSubStream:{type:"boolean"}})}}}},O={name:"option",properties:u({},E.properties)};var c=class c{constructor(e){this.core=e;d(this,"connectedRoomIdSet",new Set);d(this,"updateSeq",0)}getName(){return c.Name}getAlias(){return"crs-r"}getGroup(e){var a;let r=(e==null?void 0:e.userId)||((a=e==null?void 0:e.updateList)==null?void 0:a[0].userId)||"";return r||(e?e.updateList?String(e.updateList[0].roomId)||e.updateList[0].strRoomId||"":String(e.roomId)||e.strRoomId||"":"*")}getValidateRule(e){switch(e){case"start":return T;case"update":return g;case"stop":return O}}async start({roomId:e,strRoomId:r,userId:a}){let{RtcError:t,ErrorCode:s}=this.core.errorModule;if(!this.core.room.sendSignalMessage)throw new t({code:s.ENV_NOT_SUPPORTED});let n=e||r,i=await this.core.room.sendSignalMessage({command:"connect_other_room",responseCommand:String(8209),data:{roomId:n,userId:a,localRoomId:a?void 0:this.core.room.roomId},retries:3});if(i.data.code!==0)throw new t({code:s.SERVER_ERROR,extraCode:i.data.code,message:i.data.message});a||this.connectedRoomIdSet.add(n)}async update({updateList:e}){var n;let{RtcError:r,ErrorCode:a}=this.core.errorModule;if(!this.core.room.sendSignalMessage)throw new r({code:a.ENV_NOT_SUPPORTED});let t=e.find(i=>i.userId)?0:1,s=await this.core.room.sendSignalMessage({command:"update_other_room_forward_mode",responseCommand:String(8213),data:{seq:++this.updateSeq,operationType:t,updateList:e.map(({roomId:i,strRoomId:_,userId:I,muteAudio:A,muteVideo:D,muteSubStream:U})=>({roomId:i||_,userId:I,muteAudio:A,muteVideo:D,muteSubStream:U}))},retries:3});if(s.data.data.expectSeq)return this.updateSeq=s.data.data.expectSeq,this.update({updateList:e});if(s.data.code!==0)throw new r({code:a.SERVER_ERROR,extraCode:s.data.code,message:s.data.message});if(((n=s.data.data.errorList)==null?void 0:n.length)>0)throw new r({code:a.UNKNOWN_ERROR,message:s.data.data.errorList[0].message})}async stop({roomId:e,strRoomId:r}={}){let a=e||r;if(a)await this.doStop(a);else if(this.connectedRoomIdSet.size>0)for(let t of[...this.connectedRoomIdSet.values()])await this.doStop(t);else await this.doStop()}async doStop(e){let{RtcError:r,ErrorCode:a}=this.core.errorModule;if(!this.core.room.sendSignalMessage)throw new r({code:a.ENV_NOT_SUPPORTED});let t=await this.core.room.sendSignalMessage({command:"disconnect_other_room",responseCommand:String(8211),data:{roomId:e,localRoomId:this.core.room.roomId},retries:3});if(t.data.code!==0)throw new r({code:a.SERVER_ERROR,extraCode:t.data.code,message:t.data.message});this.connectedRoomIdSet.delete(e)}destroy(){}};d(c,"Name","CrossRoom");var p=c;var k=p;return L(V);})().default;
