"use strict";var CrossRoom=(()=>{var m=Object.defineProperty,C=Object.defineProperties,N=Object.getOwnPropertyDescriptor,y=Object.getOwnPropertyDescriptors,x=Object.getOwnPropertyNames,b=Object.getOwnPropertySymbols;var R=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var c=(a,e,r)=>e in a?m(a,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[e]=r,d=(a,e)=>{for(var r in e||(e={}))R.call(e,r)&&c(a,r,e[r]);if(b)for(var r of b(e))P.call(e,r)&&c(a,r,e[r]);return a},T=(a,e)=>C(a,y(e));var h=(a,e)=>{for(var r in e)m(a,r,{get:e[r],enumerable:!0})},f=(a,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of x(e))!R.call(a,t)&&t!==r&&m(a,t,{get:()=>e[t],enumerable:!(o=N(e,t))||o.enumerable});return a};var L=a=>f(m({},"__esModule",{value:!0}),a);var u=(a,e,r)=>(c(a,typeof e!="symbol"?e+"":e,r),r);var k={};h(k,{default:()=>p});var E={properties:{roomId:{type:"number"},strRoomId:{type:"string"}}},S={name:"option",required:!0,properties:T(d({},E.properties),{userId:{type:"string"}})},g={name:"option",required:!0,properties:{updateList:{type:"array",required:!0,arrayItem:{required:!0,type:"object",properties:T(d({},S.properties),{userId:{required:!1,type:"string"},muteAudio:{type:"boolean"},muteVideo:{type:"boolean"},muteSubStream:{type:"boolean"}})}}}},O={name:"option",properties:d({},E.properties)};var l=class l{constructor(e){this.core=e;u(this,"updateSeq",0)}getName(){return l.Name}getAlias(){return"crs-r"}getGroup(e){var o;let r=(e==null?void 0:e.userId)||((o=e==null?void 0:e.updateList)==null?void 0:o[0].userId)||"";return r||(e?e.updateList?String(e.updateList[0].roomId)||e.updateList[0].strRoomId||"":String(e.roomId)||e.strRoomId||"":"*")}getValidateRule(e){switch(e){case"start":return S;case"update":return g;case"stop":return O}}async start({roomId:e,strRoomId:r,userId:o}){let{RtcError:t,ErrorCode:s}=this.core.errorModule;if(!this.core.room.sendSignalMessage)throw new t({code:s.ENV_NOT_SUPPORTED});let i=e||r,n=await this.core.room.sendSignalMessage({command:"connect_other_room",responseCommand:8209,data:{roomId:i,userId:o,localRoomId:o?void 0:this.core.room.roomId},retries:3});if(n.data.code!==0)throw new t({code:s.SERVER_ERROR,extraCode:n.data.code,message:n.data.message})}async update({updateList:e}){var i;let{RtcError:r,ErrorCode:o}=this.core.errorModule;if(!this.core.room.sendSignalMessage)throw new r({code:o.ENV_NOT_SUPPORTED});let t=e.find(n=>n.userId)?0:1,s=await this.core.room.sendSignalMessage({command:"update_other_room_forward_mode",responseCommand:8213,data:{seq:++this.updateSeq,operationType:t,updateList:e.map(({roomId:n,strRoomId:_,userId:A,muteAudio:I,muteVideo:D,muteSubStream:U})=>({roomId:n||_,userId:A,muteAudio:I,muteVideo:D,muteSubStream:U}))},retries:3});if(s.data.data.expectSeq)return this.updateSeq=s.data.data.expectSeq,this.update({updateList:e});if(s.data.code!==0)throw new r({code:o.SERVER_ERROR,extraCode:s.data.code,message:s.data.message});if(((i=s.data.data.errorList)==null?void 0:i.length)>0)throw new r({code:o.UNKNOWN_ERROR,message:s.data.data.errorList[0].message})}async stop({roomId:e,strRoomId:r}={}){let{RtcError:o,ErrorCode:t}=this.core.errorModule;if(!this.core.room.sendSignalMessage)throw new o({code:t.ENV_NOT_SUPPORTED});let s=e||r,i=await this.core.room.sendSignalMessage({command:"disconnect_other_room",responseCommand:8211,data:{roomId:s,localRoomId:this.core.room.roomId},retries:3});if(i.data.code!==0)throw new o({code:t.SERVER_ERROR,extraCode:i.data.code,message:i.data.message})}destroy(){}};u(l,"Name","CrossRoom");var p=l;return L(k);})().default;
